 if (hp < 1) {
            cout << "You died! The beast still has " << mhp << " HP left, better luck next time!\n";
            cin.get();
            return 0;
        }
        else {
            cout << "You can start!\n";
 
        while(hp > 0 || mhp > 0){
            cout << "What do you want to do?\n 1 -> Fierce Attack \n 2 -> Light Attack \n 3 -> Defensive Dance.\n";
            do{cin >> choice;} while(choice > 3 || choice < 1);
            switch (choice){
            case 1:
                atk = rand()%20+10;
                def = rand()%10+10;
                agi = rand()%5;
                break;
            case 2:
                atk = rand()%5+10;
                def = rand()%10+10;
                agi = rand()%15;
                break;
            case 3:
                atk = rand()%10+10;
                def = rand()%20+10;
                agi = rand()%5;
                break;
            }
            choice = rand()%3;
 
            switch (choice){
            case 1:
                matk = rand()%20+10;
                mdef = rand()%10+10;
                magi = rand()%5;
                break;
            case 2:
                matk = rand()%5+10;
                mdef = rand()%10+10;
                magi = rand()%15;
                break;
            case 3:
                matk = rand()%10+10;
                mdef = rand()%20+10;
                magi = rand()%5;
                break;
            }
             mdamage = (atk - magi) - (mdef/atk);
            if (mdamage <0){
            mdamage = 0;
            }
            mhp = mhp - mdamage;
            cout << "You did " << mdamage << " damage to the monster!\n";
            cin.get();
 
            if(mhp < 1) {
                cout << "You have killed the enemy! You find loot!\n";
                cin.get();
                return 0;
            }
 
            cout << "The monter now has " << mhp << " HP left.\n";
            damage = (matk - agi) - (def / matk);
            if (damage < 0)
            {
                damage = 0;
            }
            hp = hp - damage;
 
             cout << "The monster stole " << damage << " points from you. You still have, " << hp << " HP points availalble\n";
            if (hp < 1) {
                cout << "You died! The beast still has " << mhp << " HP left, better luck next time!\n";
                cin.get();
                return 0;
            }
        }
    }
}
}

void exit(){
//User details should be committed to database here.
cout<<"RUN EXIT SEQUENCE"<<endl;
}

void hunt(USER user){

cout<<"RUN HUNT SEQUENCE"<<endl;
user.get_status();
user.change_health(1);
//testing, as user attributes can not be changed from these functions for some reason.
//DOES CHANGE JUST DOESN'T PERMANANTLY MODIFY VALUE, PERHAPS THE CHANGE NEEDS TO BE RETURNED?
//return user; ---What type of funciton could return an object? or do they need to be methods of user?
user.get_status();
}

void shop(USER user){//Changed int for void

cout<<"RUN SHOP SEQUENCE"<<endl;
}

string UserIn;
void  menu(USER user)
{
user.get_status();

cout<<"[F]ight"<<endl<<"[E]xit"<<endl
<<"[S]hop"<<endl<<"[H]unt"<<endl;

cin>>UserIn;
//transform(UserIn.begin(),UserIn.end(),UserIn.begin(),::tolower);
UserIn=UserIn[0];
UserIn=tolower(UserIn[0]);

if (UserIn=="f"){
cout<<"FIGHT"<<endl;
fight(user);//Fight and other modules should return values which are used to alter user stats.
        user.change_health(-1);//HOW DO YOU PERMANANTLY MODIFY CLASS ATTRIBUTES FROM WITHIN FUNCTIONS.
//user.update_attack(); - update_attack can be used to set attack to a specific value, change_attack is used to alter it by the agument.
//user.get_status(); - for testing.
}

else if (UserIn=="s"){
cout<<"SHOP"<<endl;
shop(user);
user.change_money(0.01);
}

else if (UserIn=="e"){
cout<<"EXIT"<<endl;
}

else if (UserIn=="h"){
cout<<"HUNT"<<endl;
hunt(user);
user.change_health(1);
}
else{
cout<<"INVALID INPUT"<<endl;
}
}

int main(){

string Username;//User picks his name which is passed to the USER class, user should be checked in database to see if it exists, if so it should assume those stats.
cout<<"What is your Username? ";
cin>>Username;
cout<<"\nUsername is: "<<Username<<endl;

USER user(Username, 10,2,0.01);

do{
    menu(user);
}while (UserIn!="e");
exit();

//save user stats to database?

return 0;}
